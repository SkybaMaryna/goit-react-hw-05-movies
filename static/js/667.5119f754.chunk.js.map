{"version":3,"file":"static/js/667.5119f754.chunk.js","mappings":"sMA6CA,UAzCmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,aAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAkBL,GAAWM,KAAKV,EACnC,GAAE,CAACI,IASJ,OACE,iCACE,kBAAMO,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,EAAgB,CAAEC,UAAWU,EAAKE,SAASZ,UAAUa,QACrDH,EAAKI,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,eACxB,0CAEDrB,IACC,wBACGA,EAAOsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMpB,GAA1C,SACGiB,KAFID,EADC,QAWrB,C,+LC1CKK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,8BAAD,OACIF,EADJ,oBADvB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCwB,GAAjC,wFACkBJ,EAAAA,EAAAA,GAAM,wBAAD,OACFF,EADE,kBACeM,EADf,oBADvB,cACCH,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OAAUP,EAAV,oBAAwBK,EAAxB,oBADvB,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OACjBP,EADiB,4BACKK,EADL,oBADvB,cACCG,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OACjBP,EADiB,4BACKK,EADL,2BADvB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEA5BPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/moviesAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    fetchSearchMovies(movieName).then(setMovies);\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ movieName: form.elements.movieName.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movieName\"></input>\n        <button>Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = 'd492b6582f5fe5294bae17dd5d072295';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  const response = await axios(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviesById(id) {\n  const response = await axios(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMoviesCast(id) {\n  const response = await axios(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMoviesReview(id) {\n  const response = await axios(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchSearchMovies","then","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","id","original_title","to","state","from","API_KEY","fetchTrendMovies","axios","response","data","results","query","fetchMoviesById","fetchMoviesCast","cast","fetchMoviesReview"],"sourceRoot":""}