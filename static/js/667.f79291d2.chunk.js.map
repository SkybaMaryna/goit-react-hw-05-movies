{"version":3,"file":"static/js/667.f79291d2.chunk.js","mappings":"sMAkDA,UA9CmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,aAC7BC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCT,EAAAA,EAAAA,UAAS,IAA7C,eAAOU,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACHN,IAGLO,EAAAA,EAAAA,IAAkBP,GAAWQ,KAAKZ,EACnC,GAAE,CAACI,IAcJ,OACE,iCACE,kBAAMS,SAdW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfd,EAAgB,CAAEC,UAAWY,EAAKE,SAASd,UAAUe,MAAMC,SAC3DJ,EAAKK,OACN,EASG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YAAYC,SARrB,SAAAV,GACnB,IAAQK,EAAUL,EAAEW,OAAZN,MACRV,EAAcU,EAAMO,cAAcN,OACnC,KAMK,mBAAQO,UAAUnB,EAAlB,wBAGF,wBACGT,EAAO6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM3B,GAA1C,SACGwB,KAFID,EADC,QAUnB,C,+LC/CKK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,8BAAD,OACIF,EADJ,oBADvB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAAiC6B,GAAjC,wFACkBJ,EAAAA,EAAAA,GAAM,wBAAD,OACFF,EADE,kBACeM,EADf,oBADvB,cACCH,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OAAUP,EAAV,oBAAwBK,EAAxB,oBADvB,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OACjBP,EADiB,4BACKK,EADL,oBADvB,cACCG,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OACjBP,EADiB,4BACKK,EADL,2BADvB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEA5BPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/moviesAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName');\n  const location = useLocation();\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    fetchSearchMovies(movieName).then(setMovies);\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ movieName: form.elements.movieName.value.trim() });\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setInputValue(value.toLowerCase().trim());\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movieName\" onChange={handleChange}></input>\n        <button disabled={inputValue ? false : true}>Search</button>\n      </form>\n\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = 'd492b6582f5fe5294bae17dd5d072295';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  const response = await axios(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviesById(id) {\n  const response = await axios(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMoviesCast(id) {\n  const response = await axios(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMoviesReview(id) {\n  const response = await axios(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","inputValue","setInputValue","useEffect","fetchSearchMovies","then","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","reset","type","name","onChange","target","toLowerCase","disabled","map","id","original_title","to","state","from","API_KEY","fetchTrendMovies","axios","response","data","results","query","fetchMoviesById","fetchMoviesCast","cast","fetchMoviesReview"],"sourceRoot":""}